// Mr Oleksandr Duzhar licenses this file to you under the MIT license.
// If you need the License file, please send an email to duzhar@googlemail.com
// 
namespace Il2Native.Logic.DOM2
{
    public enum Kinds
    {
        Access,
        VariableDeclaration,
        UnaryOperator,
        TypeOfOperator,
        TypeExpression,
        TypeDef,
        TryStatement,
        ThrowStatement,
        ThrowExpression,
        ThisReference,
        SwitchStatement,
        StackAllocArrayCreation,
        SizeOfOperator,
        SideEffectsAsLambdaCallExpression,
        ReturnStatement,
        RefValueOperator,
        RefTypeOperator,
        PrefixUnaryExpression,
        PostfixUnaryExpression,
        PointerIndirectionOperator,
        Parameter,
        Parenthesis,
        NullCoalescingOperator,
        NoOpStatement,
        MethodGroup,
        MakeRefOperator,
        Local,
        Literal,
        LambdaExpression,
        LabelStatement,
        IsOperator,
        IfStatement,
        GotoStatement,
        ForEachIteratorStatement,
        FieldAccess,
        ExpressionStatement,
        ElementAccessExpression,
        DefaultOperator,
        Cast,
        Conversion,
        ContinueStatement,
        ConditionalOperator,
        ConditionalGoto,
        Call,
        BreakStatement,
        BlockStatement,
        Block,
        BinaryOperator,
        BaseReference,
        AssignmentOperator,
        UnaryAssignmentOperator,
        AsOperator,
        ArrayLength,
        ArrayInitialization,
        ArrayCreation,
        ArrayAccess,
        ArgListOperator,
        ArgList,
        AddressOfOperator,
        WhileStatement,
        SwitchSection,
        SwitchLabel,
        Statement,
        PrefixPostfixUnaryExpressionBase,
        ObjectCreationExpression,
        MethodBody,
        Label,
        IteratorScope,
        ForStatement,
        ForEachSimpleArrayStatement,
        Expression,
        DoStatement,
        DelegateCreationExpression,
        CatchBlock,
        MethodPointer,
        LoweredConditionalAccess,
        ConditionalReceiver
    }
}
